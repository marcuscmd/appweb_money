{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marcus\\\\Desktop\\\\React - Rocktseet\\\\moneyapp\\\\moneyapp\\\\src\\\\components\\\\transaction_table\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { Container } from \"./styles\";\nimport { useTransactions } from \"../../hooks/useTransaction_context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function TransactionTable() {\n  _s();\n  const {\n    transactions\n  } = useTransactions();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Titulo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Valor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Categoria\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: transactions.map(transaction => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: transaction.type,\n              children: new Intl.NumberFormat('pt-BR', {\n                style: 'currency',\n                currency: 'BRL'\n              }).format(transaction.amount)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Intl.DateTimeFormat('pt-BR').format(new Date(transaction.createdAt))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 33\n            }, this)]\n          }, transaction.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n_s(TransactionTable, \"CDqVwNxuFkWcMZ7RVBrG6ga0LbI=\", false, function () {\n  return [useTransactions];\n});\n_c = TransactionTable;\nvar _c;\n$RefreshReg$(_c, \"TransactionTable\");","map":{"version":3,"names":["Container","useTransactions","jsxDEV","_jsxDEV","TransactionTable","_s","transactions","children","fileName","_jsxFileName","lineNumber","columnNumber","map","transaction","title","className","type","Intl","NumberFormat","style","currency","format","amount","category","DateTimeFormat","Date","createdAt","id","_c","$RefreshReg$"],"sources":["C:/Users/Marcus/Desktop/React - Rocktseet/moneyapp/moneyapp/src/components/transaction_table/index.tsx"],"sourcesContent":["import { useContext } from \"react\";\r\nimport { Container } from \"./styles\";\r\nimport { useTransactions } from \"../../hooks/useTransaction_context\";\r\n\r\n\r\nexport function TransactionTable() {\r\n\r\n    const {transactions} = useTransactions();\r\n    return (\r\n        <Container>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Titulo</th>\r\n                        <th>Valor</th>\r\n                        <th>Categoria</th>\r\n                        <th>Data</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {transactions.map(transaction => {\r\n                        return (\r\n                            <tr key={transaction.id}>\r\n                                <td>{transaction.title}</td>\r\n                                <td\r\n                                    className={transaction.type}>\r\n                                    {new Intl.NumberFormat('pt-BR', {\r\n                                        style: 'currency',\r\n                                        currency: 'BRL'\r\n                                    }).format(transaction.amount)}\r\n                                </td>\r\n                                <td>{transaction.category}</td>\r\n                                <td>\r\n                                {new Intl.DateTimeFormat('pt-BR')\r\n                                .format(new Date(transaction.createdAt))}\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </Container>\r\n    );\r\n}"],"mappings":";;AACA,SAASA,SAAS,QAAQ,UAAU;AACpC,SAASC,eAAe,QAAQ,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGrE,OAAO,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAE/B,MAAM;IAACC;EAAY,CAAC,GAAGL,eAAe,CAAC,CAAC;EACxC,oBACIE,OAAA,CAACH,SAAS;IAAAO,QAAA,eACNJ,OAAA;MAAAI,QAAA,gBACIJ,OAAA;QAAAI,QAAA,eACIJ,OAAA;UAAAI,QAAA,gBACIJ,OAAA;YAAAI,QAAA,EAAI;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACfR,OAAA;YAAAI,QAAA,EAAI;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACdR,OAAA;YAAAI,QAAA,EAAI;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAClBR,OAAA;YAAAI,QAAA,EAAI;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACRR,OAAA;QAAAI,QAAA,EACKD,YAAY,CAACM,GAAG,CAACC,WAAW,IAAI;UAC7B,oBACIV,OAAA;YAAAI,QAAA,gBACIJ,OAAA;cAAAI,QAAA,EAAKM,WAAW,CAACC;YAAK;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC5BR,OAAA;cACIY,SAAS,EAAEF,WAAW,CAACG,IAAK;cAAAT,QAAA,EAC3B,IAAIU,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;gBAC5BC,KAAK,EAAE,UAAU;gBACjBC,QAAQ,EAAE;cACd,CAAC,CAAC,CAACC,MAAM,CAACR,WAAW,CAACS,MAAM;YAAC;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7B,CAAC,eACLR,OAAA;cAAAI,QAAA,EAAKM,WAAW,CAACU;YAAQ;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC/BR,OAAA;cAAAI,QAAA,EACC,IAAIU,IAAI,CAACO,cAAc,CAAC,OAAO,CAAC,CAChCH,MAAM,CAAC,IAAII,IAAI,CAACZ,WAAW,CAACa,SAAS,CAAC;YAAC;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpC,CAAC;UAAA,GAbAE,WAAW,CAACc,EAAE;YAAAnB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAcnB,CAAC;QAGb,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEpB;AAACN,EAAA,CAvCeD,gBAAgB;EAAA,QAELH,eAAe;AAAA;AAAA2B,EAAA,GAF1BxB,gBAAgB;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}