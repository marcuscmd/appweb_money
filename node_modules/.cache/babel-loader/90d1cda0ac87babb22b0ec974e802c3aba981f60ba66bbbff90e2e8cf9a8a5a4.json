{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marcus\\\\Desktop\\\\React - Rocktseet\\\\moneyapp\\\\moneyapp\\\\src\\\\transaction_context.tsx\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from \"react\";\nimport { api } from \"./services/api\";\n\n// interface TransactionInput {\n//     title: string;\n//     amount: number;\n//     type: string;\n//     category: string;\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TransactionContext = /*#__PURE__*/createContext({});\nexport function TransactionsProvider({\n  children\n}) {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  useEffect(() => {\n    api.get('transactions').then(response => setTransactions(response.data.transactions));\n  }, []);\n  function createTransaction(transaction) {\n    api.post('/transactions', transaction);\n  }\n  return /*#__PURE__*/_jsxDEV(TransactionContext.Provider, {\n    value: {\n      transactions,\n      createTransaction\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s(TransactionsProvider, \"tSC852gg/pAfbHr6jYEePbawnUU=\");\n_c = TransactionsProvider;\nvar _c;\n$RefreshReg$(_c, \"TransactionsProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","api","jsxDEV","_jsxDEV","TransactionContext","TransactionsProvider","children","_s","transactions","setTransactions","get","then","response","data","createTransaction","transaction","post","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Marcus/Desktop/React - Rocktseet/moneyapp/moneyapp/src/transaction_context.tsx"],"sourcesContent":["import { ReactNode, createContext, useEffect, useState } from \"react\";\r\nimport { api } from \"./services/api\";\r\n\r\ninterface Transaction {\r\n    id: number;\r\n    title: string;\r\n    amount: number;\r\n    type: string;\r\n    category: string;\r\n    createdAt: string;\r\n}\r\n\r\n// interface TransactionInput {\r\n//     title: string;\r\n//     amount: number;\r\n//     type: string;\r\n//     category: string;\r\n// }\r\n\r\ntype TransactionInput = Omit<Transaction, 'id' | 'createdAt'>;\r\n\r\ninterface TransactionsProviderProps {\r\n    children: ReactNode;\r\n}\r\n\r\ninterface TransactionscontextData {\r\n    transactions: Transaction[];\r\n    createTransaction: (transaction: TransactionInput) => void;\r\n}\r\n\r\nexport const TransactionContext = createContext<TransactionscontextData>({} as TransactionscontextData);\r\n\r\nexport function TransactionsProvider({children}: TransactionsProviderProps){\r\n    const [transactions, setTransactions] = useState<Transaction[]>([]);\r\n\r\n    useEffect(() => {\r\n        api.get('transactions')\r\n            .then(response => setTransactions(response.data.transactions))\r\n    }, []);\r\n\r\n    function createTransaction(transaction: TransactionInput){\r\n        api.post('/transactions', transaction)\r\n    }\r\n\r\n    return (\r\n        <TransactionContext.Provider value={{transactions, createTransaction}}>\r\n            {children}\r\n        </TransactionContext.Provider>\r\n    )\r\n}\r\n"],"mappings":";;AAAA,SAAoBA,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACrE,SAASC,GAAG,QAAQ,gBAAgB;;AAWpC;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAaA,OAAO,MAAMC,kBAAkB,gBAAGN,aAAa,CAA0B,CAAC,CAA4B,CAAC;AAEvG,OAAO,SAASO,oBAAoBA,CAAC;EAACC;AAAmC,CAAC,EAAC;EAAAC,EAAA;EACvE,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAgB,EAAE,CAAC;EAEnED,SAAS,CAAC,MAAM;IACZE,GAAG,CAACS,GAAG,CAAC,cAAc,CAAC,CAClBC,IAAI,CAACC,QAAQ,IAAIH,eAAe,CAACG,QAAQ,CAACC,IAAI,CAACL,YAAY,CAAC,CAAC;EACtE,CAAC,EAAE,EAAE,CAAC;EAEN,SAASM,iBAAiBA,CAACC,WAA6B,EAAC;IACrDd,GAAG,CAACe,IAAI,CAAC,eAAe,EAAED,WAAW,CAAC;EAC1C;EAEA,oBACIZ,OAAA,CAACC,kBAAkB,CAACa,QAAQ;IAACC,KAAK,EAAE;MAACV,YAAY;MAAEM;IAAiB,CAAE;IAAAR,QAAA,EACjEA;EAAQ;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACgB,CAAC;AAEtC;AAACf,EAAA,CAjBeF,oBAAoB;AAAAkB,EAAA,GAApBlB,oBAAoB;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}